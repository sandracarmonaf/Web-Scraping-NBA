# 1️⃣ URL de la página
url_root = 'https://www.basketball-reference.com/boxscores/202410220BOS.html'

#  Extraer la fecha desde la URL (formato YYYYMMDD)
fecha_str = url_root.split("/")[-1][0:8]  # Extrae los primeros 8 caracteres del nombre del archivo
fecha_formateada = f"{fecha_str[:4]}-{fecha_str[4:6]}-{fecha_str[6:8]}"  # Formato YYYY-MM-DD

# Extraer la fecha desde la URL
fecha = url_root.split("/")[-1][:8]

# 2️⃣ Navegar a la página principal
browser.get(url_root)
time.sleep(3)  # Esperar carga de la página

# 3️⃣ Extraer los nombres de los equipos
equipos = browser.find_elements(By.XPATH, '//div[@class="scorebox"]//strong/a')
nombres_equipos = [eq.text for eq in equipos]  # Lista con los nombres de los equipos
abreviaturas_equipos = [eq.get_attribute("href").split("/")[-2] for eq in equipos]


# 4️⃣ Extraer los enlaces de los cuartos (Q1, Q2, Q3, Q4, OT)
links4 = browser.find_elements(By.XPATH, '//div[@class="current"]/following-sibling::div/a[starts-with(text(), "Q") or starts-with(text(), "OT")]')
cuartos = [link.text for link in links4]  # Guardar nombres de los cuartos

# 5️⃣ Extraer estadísticas por cada equipo y cuarto
list_dict = []

for equipo in nombres_equipos:
    for index4, link4 in enumerate(links4):
        cuarto = cuartos[index4]
        print(f"Haciendo clic en {cuarto} para {equipo}")

        browser.execute_script("arguments[0].click();", link4)
        time.sleep(2)  # Esperar carga de los datos

        # Construcción dinámica del XPath basado en el equipo y el cuarto
        xpath_table = f'//caption[text()="{equipo} ({cuarto}) Table"]/..//tbody/tr'
        filas = browser.find_elements(By.XPATH, xpath_table)

        es_titular = True  # Inicialmente asumimos que son titulares
        for index, fila in enumerate(filas):
            if "Reserves" in fila.text:
                es_titular = False  # Cambia a suplentes cuando se encuentra "Reserves"
                continue

            nombre = fila.find_element(By.XPATH, './th[@scope="row"]').text if fila.find_elements(By.XPATH, './th[@scope="row"]') else ""
            celdas = fila.find_elements(By.XPATH, './td')
            stats = [celda.text for celda in celdas]

            list_dict.append({
                "Fecha": fecha_formateada,
                "Equipo": equipo,
                "Cuarto": cuarto,
                "Jugador": nombre,
                "Titular/Suplente": "Titular" if es_titular else "Suplente",
                "Minutos": stats[0] if len(stats) > 0 else "",
                "FG": stats[1] if len(stats) > 1 else "",
                "FGA": stats[2] if len(stats) > 2 else "",
                "FG%": stats[3] if len(stats) > 3 else "",
                "3P": stats[4] if len(stats) > 4 else "",
                "3PA": stats[5] if len(stats) > 5 else "",
                "3P%": stats[6] if len(stats) > 6 else "",
                "FT": stats[7] if len(stats) > 7 else "",
                "FTA": stats[8] if len(stats) > 8 else "",
                "FT%": stats[9] if len(stats) > 9 else "",
                "ORB": stats[10] if len(stats) > 10 else "",
                "DRB": stats[11] if len(stats) > 11 else "",
                "TRB": stats[12] if len(stats) > 12 else "",
                "AST": stats[13] if len(stats) > 13 else "",
                "STL": stats[14] if len(stats) > 14 else "",
                "BLK": stats[15] if len(stats) > 15 else "",
                "TOV": stats[16] if len(stats) > 16 else "",
                "PF": stats[17] if len(stats) > 17 else "",
                "PTS": stats[18] if len(stats) > 18 else "",
                "GmSc": stats[19] if len(stats) > 19 else "",
                "+/-": stats[20] if len(stats) > 20 else ""
            })

# 6️⃣ Convertir los datos en un DataFrame de Pandas y guardar en CSV
df = pd.DataFrame(list_dict)

nombre_archivo = f"{abreviaturas_equipos[0]}{abreviaturas_equipos[1]}_{fecha}.csv"

# Guardar en un archivo CSV con el nuevo nombre
df.to_csv(nombre_archivo, index=False)

print(f"Archivo guardado como: {nombre_archivo}")

# Cerrar Selenium
browser.quit()

# Mostrar el DataFrame
print(df.head())


equipos


cuartos